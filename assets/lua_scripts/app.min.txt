equire("graphics.min")local a=require('data.min')local b=require('rich_text.min')local c=require('camera.min')local d=require('code.min')SCRIPT_VERSION="v1.0.6"local e=Graphics.new()EXPOSURE_NUMBER=10;local f=0;local g=0;local h=false;local i=false;local j=false;local k=0;local l=''local m=frame.bluetooth.max_length()MESSAGE_GEN_FLAG="\x10"WILDCARD_GEN_FLAG="\x12"AUDIO_DATA_FLAG="\x13"IMAGE_DATA_FLAG="\x14"TRANSFER_DONE_FLAG="\x15"CAPTURE_SETTINGS_MSG=0x0d;MESSAGE_RESPONSE_FLAG=0x20;IMAGE_RESPONSE_FLAG=0x21;DATA_MSG=0x22;TAP_SUBS_FLAG=0x10;CHECK_FW_VERSION_FLAG=0x16;CHECK_SCRIPT_VERSION_FLAG=0x17;LISTENING_FLAG=0x11;STOP_LISTENING_FLAG=0x12;AUDIO_DATA_NON_FINAL_MSG=0x05;AUDIO_DATA_FINAL_MSG=0x06;STOP_TAP_FLAG=0x13;local function n(a)local o=frame.time.utc()+2;while frame.time.utc()<o do if pcall(frame.bluetooth.send,a)then return end end;e:append_text("","\u{F000D}")end;function run_auto_exp(p,q)local r=frame.time.utc()if p==0 or r-p>q then c.run_auto_exposure()return r else return p end end;local function s()pcall(frame.bluetooth.send,string.char(TAP_SUBS_FLAG))end;a.parsers[MESSAGE_RESPONSE_FLAG]=b.parse_reach_text;a.parsers[DATA_MSG]=d.parse_code;a.parsers[LISTENING_FLAG]=c.parse_capture_settings;local function t()if a.app_data[DATA_MSG]~=nil then local u=a.app_data[DATA_MSG].value;if u==TAP_SUBS_FLAG then frame.imu.tap_callback(s)elseif u==STOP_TAP_FLAG then frame.imu.tap_callback(nil)elseif u==STOP_LISTENING_FLAG then frame.microphone.stop()elseif u==CHECK_FW_VERSION_FLAG then n(string.char(CHECK_FW_VERSION_FLAG)..frame.FIRMWARE_VERSION)elseif u==CHECK_SCRIPT_VERSION_FLAG then n(string.char(CHECK_SCRIPT_VERSION_FLAG)..SCRIPT_VERSION)end end;if a.app_data[LISTENING_FLAG]~=nil then print("LISTENING")h=true;l=''rc,err=pcall(c.capture_and_send,a.app_data[LISTENING_FLAG])if rc==false then print(err)end;frame.microphone.start{}a.app_data[CAPTURE_SETTINGS_MSG]=nil;a.app_data[LISTENING_FLAG]=nil end;if a.app_data[MESSAGE_RESPONSE_FLAG]~=nil and a.app_data[MESSAGE_RESPONSE_FLAG].string~=nil then e:clear()e:append_text(a.app_data[MESSAGE_RESPONSE_FLAG].string,a.app_data[MESSAGE_RESPONSE_FLAG].emoji)end;if a.app_data[IMAGE_RESPONSE_FLAG]~=nil and a.app_data[IMAGE_RESPONSE_FLAG].string~=nil then e:clear()end end;local function v()for w=1,10 do l=frame.microphone.read(math.floor(m-1)/2*2)if l==nil then print("STOPPED LISTENING")pcall(n,string.char(AUDIO_DATA_FINAL_MSG))frame.sleep(0.0025)h=false;break elseif l~=''then pcall(n,string.char(AUDIO_DATA_NON_FINAL_MSG)..l)frame.sleep(0.0025)end end end;e:append_text("Booting Up","\u{F000D}")while true do local x=a.process_raw_items()if x>0 then i=false;j=false;t()g=frame.time.utc()end;if h then v()end;if frame.bluetooth.is_connected()==false and not j then j=true;e:clear()e:append_text("Disconnected","\u{F000D}")end;if frame.time.utc()-g>15 and not i then i=true;e:clear()e:append_text("","\u{F0008}")end;if frame.time.utc()-f>0.07 then e:print()f=frame.time.utc()end;if frame.time.utc()-g>18 then frame.microphone.stop()frame.display.show(' ',1,1)frame.sleep(0.05)frame.sleep()end;k=run_auto_exp(k,0.1)frame.sleep(0.001)end